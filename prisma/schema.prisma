// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Apartment {
  id              Int             @id @default(autoincrement())
  estateType      String
  location        String          @db.VarChar(255)
  dierction       String          @db.VarChar(255)
  floor           String
  services        String          @db.VarChar(255)
  apartmentStatus ApartmentStatus
  isAvailable     IsAvailable     @default(AVAILABLE)
  createdAt       DateTime        @default(now())
  vedioId         Int             @unique
  price           Decimal
  space           Int
}

model CommercialEstate {
  id          Int         @id @default(autoincrement())
  estateType  String
  dierction   String
  location    String
  services    String
  space       Int
  price       Decimal
  isAvailable IsAvailable @default(AVAILABLE)

  vedioId Int   @unique
}

model AgriculturalEstate {
  id          Int         @id @default(autoincrement())
  estateType  String
  dierction   String
  location    String
  description String      @db.Text
  space       Int
  price       Decimal
  isAvailable IsAvailable @default(AVAILABLE)
}

model TouristEstate {
  id          Int         @id @default(autoincrement())
  estateType  String
  dierction   String
  location    String
  description String      @db.Text
  space       Int
  price       Decimal
  isAvailable IsAvailable @default(AVAILABLE)
}

model Pledge {
  id               Int    @id @default(autoincrement())
  descriptionBefor String @db.Text
  descriptionAfter String @db.Text

  // imageaefor       Image       @relation(fields: [ imageAfterId], references: [id])
}


enum ApartmentStatus {
  NEW_BUILD
  OLD_BUILD
}

enum IsAvailable {
  AVAILABLE
  SOLD
}
